#!/sbin/sh
#
# A comprehensive Samsung services disabler script.
#
# Use this script to disable various Samsung services and protections after installing TWRP.

DEBUG=true

ZIPFILE=$3
ZIPNAME=${ZIPFILE##*/}
OUTFD=$2

scr_wdth=50

print_justified() {
  local str="$1"
  local str_len=${#str}
  local padding_len=$(( ($scr_wdth - $str_len - 2) / 2))
  local ljust="$(printf '%*s' $padding_len)"
  local rjust="$(printf '%*s' $(($padding_len + $str_len % 2)))"

  ui_print "=$ljust$str$rjust="
}

md5() {
  md5sum -b "$1"
}

file_changed() {
  local file="$1"
  local old_md5="$2"
  local new_md5=$( md5 "$file" )

  if [ $new_md5 != $old_md5 ]; then
    debug_print " -     ...modified."
  else
    debug_print " -     ...unchanged."
  fi
}

rm_from_manifest() {
  local service=$1
  local md5
  local i

  [ $major -gt 9 ] && local path_extra='\.hardware'

  for i in /vendor/etc/vintf/manifest.xml \
           $ANDROID_ROOT/system/etc/vintf/compatibility_matrix.device.xml \
           /vendor/etc/vintf/manifest/vaultkeeper_manifest.xml; do
    if [ -f $i ]; then
      ui_print " -   Found $i."
      md5=$( md5 $i )
      sed -i -e '/<hal format="hidl">/{N;/<name>vendor\.samsung'"$path_extra"'\.security\.'"$service"'<\/name>/{:loop;N;/<\/hal>/!bloop;d}}' $i
      file_changed $i $md5
    fi
  done
}

disable_fbe() {
  local md5
  local i

  ui_print " - Disabling file-based encryption (FBE) for /data..."

  for i in /vendor/etc/fstab.exynos* \
           /vendor/etc/fstab.qcom*; do
    if [ -f $i ]; then
      ui_print " -   Found $i."
      md5=$( md5 $i )
      sed -i -e 's/^\([^#].*\)fileencryption=[^,]*\(.*\)$/# &\n\1encryptable\2/g' $i
      file_changed $i $md5
    fi
  done
}

disable_vaultkeeper() {
  local md5
  local i

  ui_print " - Disabling vaultkeeperd..."

  if [ $major -gt 9 ]; then
    for i in $ANDROID_ROOT/system/etc/init/vk*.rc /vendor/etc/init/vk*.rc /vendor/etc/init/vaultkeeper*; do
      if [ -f $i ]; then
        ui_print " -   Found $i."
        md5=$( md5 $i )
        sed -i -e 's/^[^#].*$/# &/' $i
        file_changed $i $md5
      fi
    done
  else
    sed -i -e 's/^[^#].*vaultkeeper.*$/# &/' \
            -re '/\/system\/bin\/vaultkeeperd/,/^#?$/s/^[^#]*$/#&/' $ANDROID_ROOT/init.rc
  fi

  rm_from_manifest vaultkeeper

  for i in $ANDROID_ROOT/system /vendor; do
    if [ -f $i/bin/vaultkeeperd ]; then
      ui_print " -   Found $i/bin/vaultkeeperd. Disabling..."
      chmod 0 $i/bin/vaultkeeperd
    fi
  done
}

disable_cass() {
  local md5
  local i

  ui_print " - Disabling cass..."

  for i in $ANDROID_ROOT/init.rc /vendor/init/cass.rc /vendor/etc/init/cass.rc; do
    if [ -f $i ]; then
      ui_print " -   Found $i. Disabling..."
      md5=$( md5 $i )
      sed -i -e 's/^[^#].*cass.*$/# &/' -re '/\/(system|vendor)\/bin\/cass/,/^#?$/s/^[^#]*$/#&/' $i
      file_changed $i $md5
    fi
  done
}

disable_proca() {
  local md5
  local i

  ui_print " - Disabling process authentication..."

  for i in /vendor/etc/init/pa_daemon*.rc; do
    if [ -f $i ]; then
      ui_print " -   Found $i. Disabling..."
      sed -i -e 's/^[^#]/# &/' $i
      file_changed $i $md5
    fi
  done

  rm_from_manifest proca
}

disable_wsm() {
  ui_print " - Disabling wsm..."
  rm_from_manifest wsm
}

disable_recovery_restoration() {
  local r=recovery-from-boot.p
  local found
  local i

  ui_print " - Disabling restoration of stock recovery..."

  for i in $ANDROID_ROOT $ANDROID_ROOT/system; do
    if [ -f $i/$r~ ]; then
      ui_print " -   ...already disabled."
      found=true
      break
    fi

    if [ -f $i/$r ]; then
      ui_print " -   Found $i/$r. Disabling..."
      mv $i/$r $i/$r~

      if [ -f $i/$r~ ]; then
        ui_print " -     ...succeeded."
      else
        ui_print " -     ...failed."
      fi

      found=true
      break
    fi

  done

  [ -z "$found" ] && ui_print " -   Found no stock recovery. Pfft."
}

patch_libbluetooth() {
  [ $major -ne 10 ] && return

  local f=$ANDROID_ROOT/system/lib64/libbluetooth.so
  local tf=/tmp/f

  ui_print " - Bluetooth fix requested via renamed zip."
  ui_print " - Attempting to patch $f..."
  ui_print "     This may take a while."

  if echo $device | grep -E '[GN]9[67][03567][UW0]|F90(0[FN]|7[BN])|T86[05]' >/dev/null; then
    substitute='s/88000054691180522925c81a69000037e0030032/04000014691180522925c81a69000037e0031f2a/'
  else
    substitute='s/c8000034f4031f2af3031f2ae8030032/1f2003d5f4031f2af3031f2ae8031f2a/'
  fi

  xxd -p $f | tr -d '\n ' | sed -e $substitute | xxd -rp > $tf

  if ! cmp $tf $f >/dev/null && [ $(stat -c '%s' $tf) -eq $(stat -c '%s' $f) ]; then
    ui_print " -   Patching succeeded."
    touch -r $f $tf
    chmod 644 $tf
    mv $tf $f
  else
    ui_print " -   Patching failed. No change made."
    rm -f $tf
  fi
}

ui_print " "
print_full_bar
print_justified "Multi-disabler for Samsung devices"
print_justified "running Android 9 or later."
print_justified "by Ian Macdonald"
print_full_bar
ui_print " "

os=$(getprop ro.build.version.release)
major=${os%%.*}
bl=$(getprop ro.boot.bootloader)
dp=$(getprop ro.boot.dynamic_partitions)

fw=${bl:$((${#bl} - 4)):4}
device=${bl:0:$((${#bl} - 8))}
mft=$(getprop ro.build.fingerprint)
ui_print " - Device: $device"
ui_print " - Firmware version: $fw"
ui_print " - Android version: $os"
ui_print " - Dynamic partitions: $dp"
ui_print " - Build fingerprint: $mft"

[ $major -lt 9 ] && { ui_print " - Android version too low. Exiting."; exit 1; }

print_full_bar
disable_fbe
disable_vaultkeeper
disable_cass
disable_proca
disable_wsm
disable_recovery_restoration
patch_libbluetooth
print_full_bar

ui_print " "
ui_print "Done. Please reboot to complete."
ui_print " "

exit 0
